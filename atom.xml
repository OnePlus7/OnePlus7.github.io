<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>OnePlus7&#39;s BLOG</title>
  <icon>https://www.gravatar.com/avatar/28c4697922a011d4fec0a93154af8641</icon>
  <subtitle>Seven is my lucky number</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://oneplus7.github.io/"/>
  <updated>2018-10-19T07:07:20.695Z</updated>
  <id>http://oneplus7.github.io/</id>
  
  <author>
    <name>Jiaqi Ye</name>
    <email>laneye3000@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://oneplus7.github.io/2018/10/19/hello-world/"/>
    <id>http://oneplus7.github.io/2018/10/19/hello-world/</id>
    <published>2018-10-19T07:07:20.695Z</published>
    <updated>2018-10-19T07:07:20.695Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>终端中使用vim出现乱码</title>
    <link href="http://oneplus7.github.io/2016/07/05/%E7%BB%88%E7%AB%AF%E4%B8%AD%E4%BD%BF%E7%94%A8vim%E5%87%BA%E7%8E%B0%E4%B9%B1%E7%A0%81/"/>
    <id>http://oneplus7.github.io/2016/07/05/终端中使用vim出现乱码/</id>
    <published>2016-07-05T06:10:26.000Z</published>
    <updated>2018-10-19T07:07:20.696Z</updated>
    
    <content type="html"><![CDATA[<p>在终端的配置文件.zshrc中加入下面配置 </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">LC_ALL</span>=en_US.UTF-8 </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LANG</span>=en_US.UTF-8</span><br></pre></td></tr></table></figure><p>再执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> .zshrc</span><br></pre></td></tr></table></figure></p><p>就可以解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在终端的配置文件.zshrc中加入下面配置 &lt;/p&gt;
&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cla
      
    
    </summary>
    
    
      <category term="乱码  终端  vim" scheme="http://oneplus7.github.io/tags/%E4%B9%B1%E7%A0%81-%E7%BB%88%E7%AB%AF-vim/"/>
    
  </entry>
  
  <entry>
    <title>淘宝 NPM 镜像</title>
    <link href="http://oneplus7.github.io/2015/09/04/%E6%B7%98%E5%AE%9D-NPM-%E9%95%9C%E5%83%8F/"/>
    <id>http://oneplus7.github.io/2015/09/04/淘宝-NPM-镜像/</id>
    <published>2015-09-04T02:14:52.000Z</published>
    <updated>2018-10-19T07:07:20.696Z</updated>
    
    <content type="html"><![CDATA[<p>在墙内安装node的时候会出现各种各样报错的信息，通过查找一些资料，发现可以通过替换npm镜像的方式来避免出现错误。<br>淘宝的 NPM 镜像是一个完整的npmjs.org镜像。你可以用此代替官方版本(只读)，同步频率目前为 15分钟 一次以保证尽量与官方服务同步。<br>1.当前 registry.npm.taobao.org 是从 registry.npmjs.org 进行全量同步的.<br>2.当前 npm.taobao.org 运行版本是: <a href="mailto:cnpmjs.org@0.4.1" target="_blank" rel="noopener">cnpmjs.org@0.4.1</a><br>3.系统运行在 <a href="mailto:Node.js@v0.11.12" target="_blank" rel="noopener">Node.js@v0.11.12</a> 上.<br><a id="more"></a></p><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>可以通过定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --<span class="keyword">registry</span>=<span class="keyword">http</span>://<span class="keyword">registry</span>.npm.taobao.org</span><br></pre></td></tr></table></figure><p>或者添加alias：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alias</span> cnpm=<span class="string">"npm --registry=http://registry.npm.taobao.org \</span></span><br><span class="line"><span class="string">--cache=$HOME/.npm/.cache/cnpm \</span></span><br><span class="line"><span class="string">--disturl=http://dist.cnpmjs.org \</span></span><br><span class="line"><span class="string">--userconfig=$HOME/.cnpmrc"</span></span><br><span class="line"><span class="comment">#Or alias it in .bashrc or .zshrc</span></span><br><span class="line">$ <span class="keyword">echo</span> '\n<span class="comment">#alias for cnpm\nalias cnpm="npm --registry=registry.npm.taobao.org \</span></span><br><span class="line">  <span class="params">--cache=</span>$HOME/<span class="string">.npm/.cache/cnpm</span> \</span><br><span class="line">  <span class="params">--disturl=http</span>:<span class="string">//dist.cnpmjs.org</span> \</span><br><span class="line">  <span class="params">--userconfig=</span>$HOME/<span class="string">.cnpmrc</span><span class="string">"' &gt;&gt; ~/.zshrc &amp;&amp; source ~/.zshrc</span></span><br></pre></td></tr></table></figure><h2 id="安装模板"><a href="#安装模板" class="headerlink" title="安装模板"></a>安装模板</h2><p>从 registry.npm.taobao.org 安装所有模块. 当安装的时候发现安装的模块还没有同步过来, 淘宝 NPM 会自动在后台进行同步, 并且会让你从官方 NPM registry.npmjs.org 进行安装. 下次你再安装这个模块的时候, 就会直接从 淘宝 NPM 安装了.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm <span class="keyword">install</span> [<span class="keyword">name</span>]</span><br></pre></td></tr></table></figure><h2 id="同步模块"><a href="#同步模块" class="headerlink" title="同步模块"></a>同步模块</h2><p>直接通过 sync 命令马上同步一个模块, 只有 cnpm 命令行才有此功能:</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm sync <span class="built_in">connect</span></span><br></pre></td></tr></table></figure><p>当然, 你可以直接通过 web 方式来同步: npm.taobao.org/sync/connect</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">open</span> http:<span class="comment">//npm.taobao.org/sync/connect</span></span><br></pre></td></tr></table></figure><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><p>支持 npm 除了 publish 之外的所有命令, 如:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cnpm</span> <span class="literal">info</span> connect</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在墙内安装node的时候会出现各种各样报错的信息，通过查找一些资料，发现可以通过替换npm镜像的方式来避免出现错误。&lt;br&gt;淘宝的 NPM 镜像是一个完整的npmjs.org镜像。你可以用此代替官方版本(只读)，同步频率目前为 15分钟 一次以保证尽量与官方服务同步。&lt;br&gt;1.当前 registry.npm.taobao.org 是从 registry.npmjs.org 进行全量同步的.&lt;br&gt;2.当前 npm.taobao.org 运行版本是: &lt;a href=&quot;mailto:cnpmjs.org@0.4.1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;cnpmjs.org@0.4.1&lt;/a&gt;&lt;br&gt;3.系统运行在 &lt;a href=&quot;mailto:Node.js@v0.11.12&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Node.js@v0.11.12&lt;/a&gt; 上.&lt;br&gt;
    
    </summary>
    
    
      <category term="NPM镜像" scheme="http://oneplus7.github.io/tags/NPM%E9%95%9C%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 语法 与 MWeb 写作工具使用说明</title>
    <link href="http://oneplus7.github.io/2015/09/03/Markdown-%E8%AF%AD%E6%B3%95-%E4%B8%8E-MWeb-%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    <id>http://oneplus7.github.io/2015/09/03/Markdown-语法-与-MWeb-写作工具使用说明/</id>
    <published>2015-09-03T13:16:47.000Z</published>
    <updated>2018-10-19T07:07:20.695Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Markdown-的设计哲学"><a href="#Markdown-的设计哲学" class="headerlink" title="Markdown 的设计哲学"></a>Markdown 的设计哲学</h2><blockquote><p>Markdown 的目標是實現「易讀易寫」。<br>不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。<br>Markdown 的語法有個主要的目的：用來作為一種網路內容的<em>寫作</em>用語言。</p></blockquote><a id="more"></a><h2 id="本文约定"><a href="#本文约定" class="headerlink" title="本文约定"></a>本文约定</h2><p>如果有写 <code>效果如下：</code>， 在 MWeb 编辑状态下只有用 <code>CMD + R</code> 预览才可以看效果。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>Markdown 语法：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 第一级标题 `&lt;h1&gt;` </span><br><span class="line">## 第二级标题 `&lt;h2&gt;` </span><br><span class="line">###### 第六级标题 `&lt;h6&gt;`</span><br></pre></td></tr></table></figure><p>效果如下：</p><h1 id="第一级标题-lt-h1-gt"><a href="#第一级标题-lt-h1-gt" class="headerlink" title="第一级标题 &lt;h1&gt;"></a>第一级标题 <code>&lt;h1&gt;</code></h1><h2 id="第二级标题-lt-h2-gt"><a href="#第二级标题-lt-h2-gt" class="headerlink" title="第二级标题 &lt;h2&gt;"></a>第二级标题 <code>&lt;h2&gt;</code></h2><h6 id="第六级标题-lt-h6-gt"><a href="#第六级标题-lt-h6-gt" class="headerlink" title="第六级标题 &lt;h6&gt;"></a>第六级标题 <code>&lt;h6&gt;</code></h6><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>Markdown 语法：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*这些文字会生成`&lt;em&gt;`*</span><br><span class="line">_这些文字会生成`&lt;u&gt;`_</span><br><span class="line"></span><br><span class="line">**这些文字会生成`&lt;strong&gt;`**</span><br><span class="line">__这些文字会生成`&lt;strong&gt;`__</span><br></pre></td></tr></table></figure><p>在 MWeb 中的快捷键为： <code>CMD + U</code>、<code>CMD + I</code>、<code>CMD + B</code><br>效果如下：</p><p><em>这些文字会生成<code>&lt;em&gt;</code></em><br><em>这些文字会生成<code>&lt;u&gt;</code></em></p><p><strong>这些文字会生成<code>&lt;strong&gt;</code></strong><br><strong>这些文字会生成<code>&lt;strong&gt;</code></strong></p><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>四个及以上空格加回车。<br>如果不想打这么多空格，只要回车就为换行，请勾选：<code>Preferences</code> - <code>Themes</code> - <code>Translate newlines to &lt;br&gt; tags</code></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>Markdown 语法：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 项目一 无序列表 `* + 空格键`</span><br><span class="line">* 项目二</span><br><span class="line">* 项目二的子项目一 无序列表 `* + TAB + 空格键`</span><br><span class="line">* 项目二的子项目二</span><br></pre></td></tr></table></figure><ul><li>test</li><li>one<ul><li>here is the second</li><li></li></ul></li><li></li></ul><p>在 MWeb 中的快捷键为： <code>Option + U</code><br>命令应该是<code>control + U</code><br>效果如下：</p><ul><li>项目一 无序列表 <code>* + 空格键</code></li><li>项目二<ul><li>项目二的子项目一 无序列表 <code>* + TAB + 空格键</code></li><li>项目二的子项目二</li></ul></li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>Markdown 语法：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 项目一 有序列表 `数字 + . + 空格键`</span><br><span class="line"><span class="number">2.</span> 项目二 </span><br><span class="line"><span class="number">3.</span> 项目三</span><br><span class="line"><span class="number">1.</span> 项目三的子项目一 有序列表 `数字 + . + TAB + 空格键`</span><br><span class="line"><span class="number">2.</span> 项目三的子项目二</span><br></pre></td></tr></table></figure><p>效果如下：</p><ol><li>项目一 有序列表 <code>数字 + . + 空格键</code></li><li>项目二 </li><li>项目三<ol><li>项目三的子项目一 有序列表 <code>数字 + . + TAB + 空格键</code></li><li>项目三的子项目二</li></ol></li></ol><h3 id="任务列表（Task-lists）"><a href="#任务列表（Task-lists）" class="headerlink" title="任务列表（Task lists）"></a>任务列表（Task lists）</h3><p>Markdown 语法：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- <span class="string">[ ]</span> 任务一 未做任务 `- + 空格 + <span class="string">[ ]</span>`</span><br><span class="line">- <span class="string">[x]</span> 任务二 已做任务 `- + 空格 + <span class="string">[x]</span>`</span><br></pre></td></tr></table></figure><ul><li style="list-style: none"><input type="checkbox"> test1</li></ul><p>效果如下：</p><ul><li style="list-style: none"><input type="checkbox"> 任务一 未做任务 <code>- + 空格 + [ ]</code></li><li style="list-style: none"><input type="checkbox" checked> 任务二 已做任务 <code>- + 空格 + [x]</code></li></ul><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>Markdown 语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">GitHub set up</span>](<span class="link">http://zh.mweb.im/asset/img/set-up-git.gif</span>)</span><br><span class="line">格式: ![<span class="string">Alt Text</span>](<span class="link">url</span>)</span><br></pre></td></tr></table></figure><p><code>Control + Shift + I</code> 可插入Markdown语法。<br>如果是 MWeb 的文档库中的文档，还可以用拖放图片、<code>CMD + V</code> 粘贴、<code>CMD + Option + I</code> 导入这三种方式来增加图片。<br>效果如下：</p><p><img src="http://zh.mweb.im/asset/img/set-up-git.gif" alt="GitHub set up"></p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>Markdown 语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">email <span class="xml"><span class="tag">&lt;<span class="name">example@example.com</span>&gt;</span></span></span><br><span class="line">[<span class="string">GitHub</span>](<span class="link">http://github.com</span>)</span><br><span class="line">自动生成连接  <span class="xml"><span class="tag">&lt;<span class="name">http:</span>//<span class="attr">www.github.com</span>/&gt;</span></span></span><br></pre></td></tr></table></figure><p><code>Control + Shift + L</code> 可插入Markdown语法。<br>如果是 MWeb 的文档库中的文档，拖放或<code>CMD + Option + I</code> 导入非图片时，会生成连接。<br>效果如下：</p><p>Email 连接： <a href="mailto:&#101;&#120;&#x61;&#109;&#112;&#x6c;&#101;&#64;&#x65;&#120;&#97;&#x6d;&#x70;&#x6c;&#101;&#46;&#99;&#111;&#x6d;" target="_blank" rel="noopener">&#101;&#120;&#x61;&#109;&#112;&#x6c;&#101;&#64;&#x65;&#120;&#97;&#x6d;&#x70;&#x6c;&#101;&#46;&#99;&#111;&#x6d;</a><br><a href="http://github.com" target="_blank" rel="noopener">连接标题Github网站</a><br>自动生成连接像： <a href="http://www.github.com/" target="_blank" rel="noopener">http://www.github.com/</a> 这样</p><h2 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h2><p>Markdown 语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">某某说:</span><br><span class="line"><span class="quote">&gt; 第一行引用</span></span><br><span class="line"><span class="quote">&gt; 第二行费用文字</span></span><br></pre></td></tr></table></figure><p><code>Control + B</code> 可插入Markdown语法。<br>效果如下：</p><p>某某说:</p><blockquote><p>第一行引用<br>第二行费用文字</p></blockquote><h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><p>Markdown 语法：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">像这样即可：`&lt;addr&gt;` `<span class="keyword">code</span>`</span><br></pre></td></tr></table></figure><p><code>CMD + K</code> 可插入Markdown语法。<br>效果如下：</p><p>像这样即可：<code>&lt;addr&gt;</code> <code>code</code></p><h2 id="多行或者一段代码"><a href="#多行或者一段代码" class="headerlink" title="多行或者一段代码"></a>多行或者一段代码</h2><p>Markdown 语法：</p><pre><code><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fancyAlert</span>(<span class="params">arg</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(arg) &#123;</span><br><span class="line">    $.facebox(&#123;<span class="attr">div</span>:<span class="string">'#foo'</span>&#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><p><code>CMD + Shift + K</code> 可插入Markdown语法。<br>效果如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fancyAlert</span>(<span class="params">arg</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(arg) &#123;</span><br><span class="line">$.facebox(&#123;<span class="attr">div</span>:<span class="string">'#foo'</span>&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="顺序图或流程图"><a href="#顺序图或流程图" class="headerlink" title="顺序图或流程图"></a>顺序图或流程图</h2><p>Markdown 语法：</p><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">张三-&gt;李四: 嘿，小四儿, 写博客了没?</span><br><span class="line">Note right of 李四: 李四愣了一下，说：</span><br><span class="line">李四--&gt;张三: 忙得吐血，哪有时间写。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">op=&gt;operation: 我的操作</span><br><span class="line">cond=&gt;condition: 确认？</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure></code></pre><p>效果如下（ <code>Preferences</code> - <code>Themes</code> - <code>Enable sequence &amp; flow chart</code> 才会看到效果 ）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">张三-&gt;李四: 嘿，小四儿, 写博客了没?</span><br><span class="line">Note right of 李四: 李四愣了一下，说：</span><br><span class="line">李四--&gt;张三: 忙得吐血，哪有时间写。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">e=&gt;end: 结束</span><br><span class="line">op=&gt;operation: 我的操作</span><br><span class="line">cond=&gt;condition: 确认？</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><p>更多请参考：<a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="noopener">http://bramp.github.io/js-sequence-diagrams/</a>, <a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">http://adrai.github.io/flowchart.js/</a></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>Markdown 语法：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一格表头 <span class="string">| 第二格表头</span></span><br><span class="line">--------- <span class="string">| -------------</span></span><br><span class="line">内容单元格 第一列第一格 <span class="string">| 内容单元格第二列第一格</span></span><br><span class="line">内容单元格 第一列第二格 多加文字 <span class="string">| 内容单元格第二列第二格</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><table><thead><tr><th>第一格表头</th><th>第二格表头</th></tr></thead><tbody><tr><td>内容单元格 第一列第一格</td><td>内容单元格第二列第一格</td></tr><tr><td>内容单元格 第一列第二格 多加文字</td><td>内容单元格第二列第二格</td></tr></tbody></table><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>Markdown 语法：</p><pre><code>加删除线像这样用： ~~删除这些~~</code></pre><p>效果如下：</p><p>加删除线像这样用： <del>删除这些</del></p><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>以下三种方式都可以生成分隔线：</p><pre><code>********- - -</code></pre><p>效果如下：</p><hr><hr><hr><h2 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a>MathJax</h2><p>Markdown 语法：</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">块级公式：</span><br><span class="line">$$x = <span class="symbol">\d</span>frac&#123;-b <span class="symbol">\p</span>m <span class="symbol">\s</span>qrt&#123;b^2 - 4ac&#125;&#125;&#123;2a&#125; $$</span><br><span class="line"></span><br><span class="line"><span class="symbol">\\</span>[ <span class="symbol">\f</span>rac&#123;1&#125;&#123;<span class="symbol">\B</span>igl(<span class="symbol">\s</span>qrt&#123;<span class="symbol">\p</span>hi <span class="symbol">\s</span>qrt&#123;5&#125;&#125;-<span class="symbol">\p</span>hi<span class="symbol">\B</span>igr) e^&#123;<span class="symbol">\f</span>rac25 <span class="symbol">\p</span>i&#125;&#125; =</span><br><span class="line">1+<span class="symbol">\f</span>rac&#123;e^&#123;-2<span class="symbol">\p</span>i&#125;&#125; &#123;1+<span class="symbol">\f</span>rac&#123;e^&#123;-4<span class="symbol">\p</span>i&#125;&#125; &#123;1+<span class="symbol">\f</span>rac&#123;e^&#123;-6<span class="symbol">\p</span>i&#125;&#125;</span><br><span class="line">&#123;1+<span class="symbol">\f</span>rac&#123;e^&#123;-8<span class="symbol">\p</span>i&#125;&#125; &#123;1+<span class="symbol">\l</span>dots&#125; &#125; &#125; &#125; <span class="symbol">\\</span>]</span><br><span class="line"></span><br><span class="line">行内公式： $<span class="symbol">\G</span>amma(n) = (n-1)!<span class="symbol">\q</span>uad<span class="symbol">\f</span>orall n<span class="symbol">\i</span>n<span class="symbol">\m</span>athbb N$</span><br></pre></td></tr></table></figure><p>效果如下（<code>Preferences</code> - <code>Themes</code> - <code>Enable MathJax</code> 才会看到效果）：</p><p>块级公式：<br>$$    x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p><p>\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =<br>1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}<br>{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]</p><p>行内公式： $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$</p><h2 id="脚注（Footnote）"><a href="#脚注（Footnote）" class="headerlink" title="脚注（Footnote）"></a>脚注（Footnote）</h2><p>Markdown 语法：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个脚注：<span class="string">[^sample_footnote]</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p>这是一个脚注：<a href="这里是脚注信息">^sample_footnote</a></p><h2 id="注释和阅读更多"><a href="#注释和阅读更多" class="headerlink" title="注释和阅读更多"></a>注释和阅读更多</h2><!-- comment --><!-- more --><p>Actions-&gt;Insert Read More Comment <em>或者</em> <code>Command + .</code><br><strong>注</strong> 阅读更多的功能只用在生成网站或博客时。</p><h2 id="TOC"><a href="#TOC" class="headerlink" title="TOC"></a>TOC</h2><p>Markdown 语法：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[TOC]</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>[TOC]</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Markdown-的设计哲学&quot;&gt;&lt;a href=&quot;#Markdown-的设计哲学&quot; class=&quot;headerlink&quot; title=&quot;Markdown 的设计哲学&quot;&gt;&lt;/a&gt;Markdown 的设计哲学&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown 的目標是實現「易讀易寫」。&lt;br&gt;不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。&lt;br&gt;Markdown 的語法有個主要的目的：用來作為一種網路內容的&lt;em&gt;寫作&lt;/em&gt;用語言。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python虚拟开发环境配置</title>
    <link href="http://oneplus7.github.io/2015/09/03/python%E8%99%9A%E6%8B%9F%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://oneplus7.github.io/2015/09/03/python虚拟开发环境配置/</id>
    <published>2015-09-03T13:13:27.000Z</published>
    <updated>2018-10-19T07:07:20.695Z</updated>
    
    <content type="html"><![CDATA[<p>在学习python过程中，不可避免会遇到需要安装不同版本python，以及处理包依赖问题的时候。为了避免不同版本python和包的干扰。搭建不同版本的python环境是一个很好的解决方法。由于本人才疏学浅，读遍网上诸多的配置教程仍不甚了解。不得已挪出时间研究作者的文档。现将自己配置虚拟环境的经验和过程总结如下。<br>本文基于 Mac OS X 已配置好Homebrew<br><a id="more"></a><br>工具：<br>pyenv<br>pyenv-virtualenv<br>conda</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pyenv配置和切换<span class="keyword">python</span>版本。</span><br><span class="line">pyenv-virtualenv配置虚拟环境(我理解为pip安装的包在各自目录下)。</span><br><span class="line">conda配置<span class="keyword">python</span>科学计算版本Anaconda和Miniconda的虚拟环境。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pyenv 和 virtualenv 本是不同的项目，pyenv的作者将virtualenv做成pyenv插件的形式，使得pyenv和virtualenv的配合使用更加方便。</span><br></pre></td></tr></table></figure><h2 id="1-pyenv"><a href="#1-pyenv" class="headerlink" title="1. pyenv"></a>1. pyenv</h2><h3 id="1-1-理解pyenv原理："><a href="#1-1-理解pyenv原理：" class="headerlink" title="1.1 理解pyenv原理："></a>1.1 理解pyenv原理：</h3><p>当你在终端中运行命令 (例如pip) 的时候，你的操作系统会在环境变量(PATH)中按序查找该名称的可执行文件。<br>在终端中输入$PATH可查看PATH。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ $PATH</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/bin:/</span>usr<span class="regexp">/bin:/</span><span class="string">bin:</span><span class="regexp">/usr/</span><span class="string">sbin:</span>/<span class="string">sbin:</span></span><br><span class="line">$ which python</span><br><span class="line"><span class="regexp">/usr/</span>bin/python</span><br></pre></td></tr></table></figure><p>pyenv的原理是在(PATH)的最前面增加一个叫shims的目录,截获运行系统自带的python的命令。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span><span class="variable">$PATH</span></span><br><span class="line">~<span class="regexp">/.pyenv/shims</span><span class="symbol">:/usr/local/bin</span><span class="symbol">:/usr/bin</span><span class="symbol">:/bin</span><span class="symbol">:/usr/sbin</span><span class="symbol">:/sbin</span><span class="symbol">:</span></span><br><span class="line"><span class="variable">$ </span>which python</span><br><span class="line">~<span class="regexp">/.pyenv/shims</span><span class="regexp">/python</span></span><br></pre></td></tr></table></figure><h3 id="1-2-pyenv的安装"><a href="#1-2-pyenv的安装" class="headerlink" title="1.2 pyenv的安装"></a>1.2 pyenv的安装</h3><h4 id="1-2-1-通过Homebrew安装"><a href="#1-2-1-通过Homebrew安装" class="headerlink" title="1.2.1 通过Homebrew安装"></a>1.2.1 通过Homebrew安装</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">brew </span>update</span><br><span class="line">$ <span class="keyword">brew </span><span class="keyword">install </span>pyenv</span><br></pre></td></tr></table></figure><p>Mac OS X可以通过Homebrew安装。安装后需要将eval “$(pyenv init -)”添加到shell的初始化文件中，如：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo <span class="string">'eval "$(pyenv init -)"'</span> <span class="meta">&gt;&gt; </span>~<span class="regexp">/.bash_profile</span></span><br></pre></td></tr></table></figure><p>如果你用的是zsh，将~/.bash_profile替换成~/.zshenv。</p><h4 id="1-2-2-用git安装"><a href="#1-2-2-用git安装" class="headerlink" title="1.2.2 用git安装"></a>1.2.2 用git安装</h4><p>我用的是Homebrew安装，所以我只将作者的所列安装方式简述如下。</p><ul><li>~/.pyenv是你选择安装的安装位置。你当然也可以选择安装在其他地方。</li></ul><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">clone</span> <span class="title">https</span>://github.com/yyuu/pyenv.git ~/.pyenv</span><br></pre></td></tr></table></figure><ul><li>定义环境变量，并将<code>PYENV_ROOT</code> 指出<code>pyenv</code> 的安装位置, 并将<code>$PYENV_ROOT/bin</code> 添加到环境变量<code>$PATH</code> 使得能够使用pyenv命令。</li></ul><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ echo '<span class="keyword">export</span> PYENV_ROOT=<span class="string">"<span class="variable">$HOME</span>/.pyenv"</span>' &gt;&gt; ~/.bash_profile</span><br><span class="line"></span><br><span class="line">$ echo '<span class="keyword">export</span> PATH=<span class="string">"<span class="variable">$PYENV_ROOT</span>/bin:<span class="variable">$PATH</span>"</span>' &gt;&gt; ~/.bash_profile</span><br></pre></td></tr></table></figure><p>如果你用的是zsh，将<code>~/.bash_profile</code> 替换成<code>~/.zshenv</code> 。</p><ul><li>安装后需要将<code>eval &quot;$(pyenv init -)&quot;</code> 添加到shell的初始化文件中：</li></ul><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo <span class="string">'eval "$(pyenv init -)"'</span> <span class="meta">&gt;&gt; </span>~<span class="regexp">/.bash_profile</span></span><br></pre></td></tr></table></figure><p>如果你用的是zsh，将<code>~/.bash_profile</code> 替换成<code>~/.zshenv</code> 。</p><ul><li>重启Shell<h3 id="1-3-pyenv的使用"><a href="#1-3-pyenv的使用" class="headerlink" title="1.3 pyenv的使用"></a>1.3 pyenv的使用</h3>在shell中输入<code>pyenv</code> 可以查看所有命令。通过输入<code>pyenv help &lt;command&gt;</code>可以查看特定<code>&lt;command&gt;</code>的帮助和使用方法。<br><code>pyenv version</code>可查看当前已安装到版本(system是系统默认安装的版本):</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span> pyenv version</span><br><span class="line"><span class="comment">* system</span></span><br></pre></td></tr></table></figure><p><code>pyenv install --list</code>可查看所有可安装版本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv <span class="keyword">install</span> <span class="comment">--list</span></span><br><span class="line">Available <span class="keyword">versions</span>:</span><br><span class="line">  <span class="number">2.1</span><span class="number">.3</span></span><br><span class="line">  <span class="number">2.2</span><span class="number">.3</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p><code>pyenv install &lt;version&gt;</code>安装指定的版本</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv install <span class="number">2.5</span><span class="number">.4</span></span><br></pre></td></tr></table></figure><p>每次安装完新版本后要使用<code>pyenv rehash</code>，或者重启shell。<br><code>pyenv versions</code>可查看当前已安装所有版本( * 之后是当前的版本)：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv version</span><br><span class="line">*<span class="built_in"> system </span></span><br><span class="line">2.5.4</span><br></pre></td></tr></table></figure><p>现在开始进行python不同版本的切换（我的系统自带版本是2.7.6）：<br>pyenv可以在当前shell，当前所在目录(local)，全局环境(global)下切换python版本。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">python</span> --<span class="keyword">version</span></span><br><span class="line">Python <span class="number">2.7</span>.<span class="number">6</span></span><br><span class="line">$ pyenv <span class="keyword">shell</span> <span class="number">2.5</span>.<span class="number">4</span></span><br><span class="line">$ <span class="keyword">python</span> --<span class="keyword">version</span></span><br><span class="line">Python <span class="number">2.5</span>.<span class="number">4</span></span><br><span class="line"># 仅在当前窗口可用，关闭了窗口就变回原来的<span class="keyword">python</span>版本了</span><br><span class="line">$ pyenv <span class="keyword">global</span> <span class="built_in">system</span></span><br><span class="line">$ <span class="keyword">python</span> --<span class="keyword">version</span></span><br><span class="line">Python <span class="number">2.7</span>.<span class="number">6</span></span><br><span class="line">$ pyenv local <span class="number">2.5</span>.<span class="number">4</span></span><br><span class="line">$ <span class="keyword">python</span> --<span class="keyword">version</span></span><br><span class="line">Python <span class="number">2.5</span>.<span class="number">4</span></span><br><span class="line"># 仅在当前目录以及其子目录中设置了<span class="keyword">python</span>的版本，其他目录的版本不变。</span><br></pre></td></tr></table></figure><p><code>pyenv uninstall 2.5.4</code>可卸载指定版本</p><h2 id="2-pyenv-virtualenv"><a href="#2-pyenv-virtualenv" class="headerlink" title="2. pyenv-virtualenv"></a>2. pyenv-virtualenv</h2><p>pyenv负责切换python版本，virtualenv能够切换虚拟开发环境。二者的配合可以构建并管理不同的版本的虚拟开发环境。</p><h3 id="2-1-pyenv-virtualenv的安装"><a href="#2-1-pyenv-virtualenv的安装" class="headerlink" title="2.1 pyenv-virtualenv的安装"></a>2.1 pyenv-virtualenv的安装</h3><p>有了安装pyenv的经验，安装pyenv-virtualenv的过程会简略一些。</p><h4 id="2-1-1-通过Homebrew安装"><a href="#2-1-1-通过Homebrew安装" class="headerlink" title="2.1.1 通过Homebrew安装"></a>2.1.1 通过Homebrew安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> brew install pyenv-virtualenv</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">'eval "$(pyenv init -)"'</span> &gt;&gt; ~/.bash_profile</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">'eval "$(pyenv virtualenv-init -)"'</span> &gt;&gt; ~/.bash_profile</span></span><br></pre></td></tr></table></figure><p>如果你用的是zsh，将~/.bash_profile替换成~/.zshenv。</p><p>2.1.2 用git安装</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:<span class="string">//github.com/yyuu/pyenv-virtualenv.git</span> ~<span class="string">/.pyenv/plugins/pyenv-virtualenv</span></span><br><span class="line">$ <span class="keyword">echo</span> 'eval <span class="string">"$(pyenv init -)"</span>' &gt;&gt; ~<span class="string">/.bash_profile</span></span><br><span class="line">$ <span class="keyword">echo</span> 'eval <span class="string">"$(pyenv virtualenv-init -)"</span>' &gt;&gt; ~<span class="string">/.bash_profile</span></span><br></pre></td></tr></table></figure><h3 id="2-2-pyenv-virtualenv的使用"><a href="#2-2-pyenv-virtualenv的使用" class="headerlink" title="2.2 pyenv-virtualenv的使用"></a>2.2 pyenv-virtualenv的使用</h3><h4 id="2-2-1创建一个虚拟环境"><a href="#2-2-1创建一个虚拟环境" class="headerlink" title="2.2.1创建一个虚拟环境"></a>2.2.1创建一个虚拟环境</h4><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv virtualenv <span class="number">3.4</span><span class="number">.1</span> testENV1</span><br><span class="line"># 格式形如 pyenv virtualenv [version] &lt;virtualenv-name&gt; 如果[version]省略 则，默认版本为当前版本</span><br><span class="line">$ python --version</span><br><span class="line">Python <span class="number">2.7</span><span class="number">.9</span></span><br><span class="line">$ pyenv virtualenv testENV2 # 为当前python版本<span class="number">2.7</span><span class="number">.9</span></span><br><span class="line"># 低于<span class="number">2.7</span><span class="number">.9</span>的python版本是没有默认装pip的,若想用这些版本创建环境，需要提前安好pip。</span><br></pre></td></tr></table></figure><h4 id="2-2-2查看已有虚拟环境"><a href="#2-2-2查看已有虚拟环境" class="headerlink" title="2.2.2查看已有虚拟环境"></a>2.2.2查看已有虚拟环境</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv virtualenvs</span><br><span class="line">testENV1 (created <span class="keyword">from</span> ~<span class="regexp">/.pyenv/</span>versions/<span class="number">3.4</span><span class="number">.1</span>)</span><br><span class="line">testENV2 (created <span class="keyword">from</span> ~<span class="regexp">/.pyenv/</span>versions/<span class="number">2.7</span><span class="number">.9</span>)</span><br><span class="line">＃如果你有conda环境，也会被列出来</span><br></pre></td></tr></table></figure><h4 id="2-2-3删除一个虚拟环境"><a href="#2-2-3删除一个虚拟环境" class="headerlink" title="2.2.3删除一个虚拟环境"></a>2.2.3删除一个虚拟环境</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>pyenv uninstall testENV2</span><br><span class="line"><span class="comment"># 或者你可以直接删除 ~/.pyenv/versions中的相应目录</span></span><br></pre></td></tr></table></figure><h4 id="2-2-4使用虚拟环境"><a href="#2-2-4使用虚拟环境" class="headerlink" title="2.2.4使用虚拟环境"></a>2.2.4使用虚拟环境</h4><p>当你用pyenv-virtualenv 创建虚拟环境后，运行pyenv versions你会发现,创建的虚拟环境也在这个列表内，这样，你就可以通过pyenv来同时切换shell, local, global的虚拟环境和该环境的python版本了。这样用pip安装的包就会在 testENV1 这个环境下，从而可以避免系统环境污染</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv versions</span><br><span class="line">* system</span><br><span class="line">  2.7.9</span><br><span class="line">  3.4.1</span><br><span class="line">  testENV1</span><br><span class="line">$ which python </span><br><span class="line">~/.pyenv/shims/python</span><br><span class="line">$ which pip</span><br><span class="line">~/.pyenv/shims/pip</span><br><span class="line">$ pyenv local testENV1</span><br><span class="line">(testENV1) $ which python</span><br><span class="line">~/.pyenv/versions/testENV1/bin/python</span><br><span class="line">(testENV1) $ which pip</span><br><span class="line">~/.pyenv/versions/testENV1/bin/pip</span><br></pre></td></tr></table></figure><p>你也可以用用另一种方式切换虚拟环境</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>pyenv activate testENV1           <span class="comment"># pyenv activate &lt;name&gt;</span></span><br><span class="line"><span class="variable">$ </span>pyenv deactivate</span><br></pre></td></tr></table></figure><p>如果你想使用带Anaconda或者Miniconda版本的虚拟环境的话，同样可以用pyenv install来安装，但用上述方法管理和切换conda版本就不是很方便了。要想灵活使用科学计算环境的虚拟环境，可以用conda命令来实现。如果你不需要使用科学计算包的话。就不用了解后面的内容了。</p><h2 id="3-conda"><a href="#3-conda" class="headerlink" title="3. conda"></a>3. conda</h2><p>接下来的篇幅是由于我无法用pyenv virtualenv很好的创建管理conda环境。因为当我尝试用上述方法创建时，出了一些问题。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ pyenv virtualenv anaconda<span class="number">-2.3</span><span class="number">.0</span> test</span><br><span class="line"></span><br><span class="line">WARNING: <span class="keyword">using</span> virtualenv <span class="keyword">with</span> conda is untested <span class="keyword">and</span> <span class="keyword">not</span> recommended.</span><br><span class="line">    We suggest <span class="keyword">using</span> <span class="keyword">the</span> conda <span class="keyword">command</span> <span class="title">to</span> <span class="title">create</span> <span class="title">environments</span> <span class="title">instead</span>.</span><br><span class="line">    For more information about creating conda environments, please see:</span><br><span class="line">        <span class="keyword">http</span>://docs.continuum.io/conda/examples/<span class="built_in">create</span>.html</span><br><span class="line"></span><br><span class="line">Proceed (y/n)?</span><br><span class="line"></span><br><span class="line">```既然不推荐，我就没打算用。由于conda的文档相对较长,内容太多，我只总结了必要的几个命令。</span><br><span class="line"></span><br><span class="line"><span class="comment">### 3.1 conda安装</span></span><br><span class="line">conda工具是在Anaconda或Miniconda环境下自带的工具,所以使用前必须切换到Anaconda或Miniconda的版本。由于Anaconda很大(将近<span class="number">1</span>G？)，需要安装一段时间。但miniconda会小很多(然而我并不是很清楚这个的作用）。</span><br></pre></td></tr></table></figure><p>$ pyenv install anaconda-2.3.0<br>$ pyenv local anaconda-2.3.0<br>(root)$ conda # 可以查看该工具的所用功能<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">### <span class="number">3.2</span> 创建conda环境</span><br><span class="line">这里的 -n 后面所指为该环境的名字，后面的python是指python默认的包。你也可以通过在改行后面加你想安装的包来直接生成。例如：`conda create -n test2 python numpy scipy...`</span><br></pre></td></tr></table></figure></p><p>(root)$ conda create -n test python<br>…<br>Proceed ([y]/n)?<br>$ y</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">### <span class="number">3.3</span> 查看已有conda环境</span><br><span class="line">root是用pyenv安装的conda版本，也是其他版本所依赖的原始版本。</span><br></pre></td></tr></table></figure><p>(root)$ conda ENV list<br>root                  * ~/.pyenv/versions/anaconda-2.3.0<br>test                    ~/.pyenv/versions/anaconda-2.3.0/envs/test<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### <span class="number">3.4</span> 删除已有conda环境</span><br></pre></td></tr></table></figure></p><p>(root)$ conda remove –name test –all</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### <span class="number">3.5</span> conda的使用</span><br></pre></td></tr></table></figure><p>conda环境的激活和退出使用命令source activate CondaENV和source deactivate</p><p>(root)$ source activate test<br>(test)$ source deactivate<br>(root)$ which python<br>~/.pyenv/versions/anaconda-2.3.0/bin/python</p><p><code>`</code></p><h3 id="3-6-conda环境中的包管理"><a href="#3-6-conda环境中的包管理" class="headerlink" title="3.6 conda环境中的包管理"></a>3.6 conda环境中的包管理</h3><p>在conda环境中，可以通过pip来管理包，也可以通过以下方式来管理。<br><code>conda list</code>来列出当前环境的所有包。<code>conda search &lt;package&gt;</code> 在Anaconda.org搜索包。<code>conda install &lt;package&gt;</code>来安装conda remove <package>来移除。</package></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在学习python过程中，不可避免会遇到需要安装不同版本python，以及处理包依赖问题的时候。为了避免不同版本python和包的干扰。搭建不同版本的python环境是一个很好的解决方法。由于本人才疏学浅，读遍网上诸多的配置教程仍不甚了解。不得已挪出时间研究作者的文档。现将自己配置虚拟环境的经验和过程总结如下。&lt;br&gt;本文基于 Mac OS X 已配置好Homebrew&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用hexo搭建博客</title>
    <link href="http://oneplus7.github.io/2015/09/03/%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://oneplus7.github.io/2015/09/03/使用hexo搭建博客/</id>
    <published>2015-09-03T13:09:48.000Z</published>
    <updated>2018-10-19T07:07:20.696Z</updated>
    
    <content type="html"><![CDATA[<p>无意中发现了Hexo这个基于Node.js的博客框架，之前已经考虑了很久要建个人博客，于是就动起了折腾的想法。事实证明在墙内使用确实还是有一点点折腾的，不过尝试过后感觉Hexo确实很不错，很赞。<br><a id="more"></a><br>在此就目前折腾会的一点东西做一些总结，由于软件还在不断完善中，难免新版本会有细微差别，所以仅作参考。<br><a href="https://hexo.io" target="_blank" rel="noopener">官网</a>，建议挂vpn，作者是台湾的tommy351，其简介是：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A fast,<span class="built_in"> simple </span>&amp; powerful blog framework, powered by Node.js.</span><br></pre></td></tr></table></figure><p>本文以Mac系统为例</p><h3 id="1-Git安装和Github设置"><a href="#1-Git安装和Github设置" class="headerlink" title="1.Git安装和Github设置"></a>1.Git安装和Github设置</h3><hr><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>git         <span class="comment">#Mac电脑使用brew安装</span></span><br><span class="line">sudo apt-get <span class="keyword">install </span>git <span class="comment">#Ubuntu系统使用这条命令安装</span></span><br></pre></td></tr></table></figure><p>使用Github Page搭建博客, 需要遵循一定的规则, 需要在github建立仓库,仓库名为Github用户.github.io, 像我的就是<strong><a href="http://oneplus7.github.io">http://oneplus7.github.io</a></strong>，更多详情请参考<a href="https://pages.github.com" target="_blank" rel="noopener">官方文档</a></p><h3 id="2-Node-js安装"><a href="#2-Node-js安装" class="headerlink" title="2.Node.js安装"></a>2.Node.js安装</h3><hr><p>Mac OS X/Linux或其他UNIX/类UNIX系统 配置 nodes 环境<br>请去<a href="https://nodejs.org/download/" target="_blank" rel="noopener">官方网站</a>下载 <code>.pkg</code> 文件 覆盖路径 <code>/usr</code>  即可</p><p>也可以下载源代码编译安装</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://nodejs.org/dist/v0.<span class="number">12.4</span>/<span class="keyword">node</span><span class="title">-v0</span>.<span class="number">12.4</span>.tar.gz</span><br><span class="line">$ tar zxvf <span class="keyword">node</span><span class="title">-v0</span>.<span class="number">12.4</span>.tar.gz</span><br><span class="line">$ cd <span class="keyword">node</span><span class="title">-v0</span>.<span class="number">12.4</span></span><br><span class="line"><span class="comment"># ./configure --prefix=/usr</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><p>没记错的话，Node包里目前应该已经自带了npm，可以直接用。<br>Node.js的详细内容请参考<a href="http://andrewliu.tk/2014/11/02/2014-11-02-Node.js学习笔记/" target="_blank" rel="noopener">Node.js学习笔记</a></p><h3 id="3-Hexo安装"><a href="#3-Hexo安装" class="headerlink" title="3.Hexo安装"></a>3.Hexo安装</h3><hr><p>通过npm安装Hexo-Cli 和 hexo</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo -g</span><br></pre></td></tr></table></figure><p>如果以上命令不能安装 可以尝试把官方源替换为淘宝npm源 再执行安装Hexo</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">npm</span> install -g cnpm --registry=https:<span class="regexp">//</span>registry.<span class="built_in">npm</span>.taobao.org</span><br></pre></td></tr></table></figure><p>或者你直接通过添加 <code>npm</code>  参数 <code>alias</code>  一个新命令:</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ alias cnpm="npm --registry=https://registry.npm.taobao.org \</span><br><span class="line">-<span class="ruby">-cache=$HOME/.npm/.cache/cnpm \</span></span><br><span class="line"><span class="ruby">--disturl=<span class="symbol">https:</span>/<span class="regexp">/npm.taobao.org/dist</span> \</span></span><br><span class="line"><span class="ruby">--userconfig=$HOME/.cnpmrc<span class="string">"</span></span></span><br></pre></td></tr></table></figure><p>如果以上的 cnpm 无法安装 可以试试看下方的 alias 方法</p><figure class="highlight plain"><figcaption><span>echo '\n#alias for cnpm\nalias cnpm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--cache=$HOME/.npm/.cache/cnpm \</span><br><span class="line">--disturl=https://npm.taobao.org/dist \</span><br><span class="line">--userconfig=$HOME/.cnpmrc&quot;&apos; &gt;&gt; ~/.zshrc &amp;&amp; source ~/.zshrc</span><br></pre></td></tr></table></figure><p>Hexo目录结构</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── .deploy       <span class="meta">#需要部署的文件</span></span><br><span class="line">├── node_modules  <span class="meta">#Hexo插件</span></span><br><span class="line">├── <span class="keyword">public</span>        <span class="meta">#生成的静态网页文件</span></span><br><span class="line">├── scaffolds     <span class="meta">#模板</span></span><br><span class="line">├── source        <span class="meta">#博客正文和其他源文件，404、favicon、CNAME 都应该放在这里</span></span><br><span class="line">|   ├── _drafts   <span class="meta">#草稿</span></span><br><span class="line">|   └── _posts    <span class="meta">#文章</span></span><br><span class="line">├── themes        <span class="meta">#主题</span></span><br><span class="line">├── _config.yml   <span class="meta">#全局配置文件</span></span><br><span class="line">└── <span class="keyword">package</span>.json</span><br></pre></td></tr></table></figure><h3 id="4-Hexo配置"><a href="#4-Hexo配置" class="headerlink" title="4.Hexo配置"></a>4.Hexo配置</h3><hr><p>既然是要写自己的博客，肯定要找个本地地位置安置。例如：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> blog</span><br></pre></td></tr></table></figure><p>进去之后加入hexo和安装npm 初始化自己的博客。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> $ hexo init &amp;&amp; npm install</span><br><span class="line">[info] Copying data</span><br><span class="line">[info] You are almost done! Don't forget <span class="keyword">to</span> <span class="built_in">run</span> `npm install` <span class="keyword">before</span> you start b</span><br><span class="line">logging <span class="keyword">with</span> Hexo!</span><br></pre></td></tr></table></figure><p>运行server</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">[info] Hexo <span class="keyword">is</span> running at http://localhos<span class="variable">t:4000</span>/. Press Ctrl+C <span class="keyword">to</span> <span class="keyword">stop</span>.</span><br></pre></td></tr></table></figure><p>表明Hexo Server已经启动了，在浏览器中打开 <a href="http://localhost:4000/，这时可以看到Hexo已为你生成了一篇名为Hello" target="_blank" rel="noopener">http://localhost:4000/，这时可以看到Hexo已为你生成了一篇名为Hello</a> World 的blog。<br>你可以按Ctrl+C 停止Server。</p><p>创建一篇文章：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> <span class="string">"My New Post"</span></span><br><span class="line">[info] <span class="keyword">File</span> created at blog\<span class="keyword">source</span>\_posts\My-<span class="keyword">New</span>-Post.md</span><br></pre></td></tr></table></figure><p>Hexo 的全局配置是修改根目录下_config.yml这个文件</p><h3 id="5-Hexo常用插件安装与配置"><a href="#5-Hexo常用插件安装与配置" class="headerlink" title="5.Hexo常用插件安装与配置"></a>5.Hexo常用插件安装与配置</h3><hr><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-<span class="keyword">archive</span> <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-<span class="keyword">category</span> <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-tag <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-deployer-heroku <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-deployer-rsync <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-deployer-openshift <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-renderer-marked@<span class="number">0.2</span><span class="number">.5</span> <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-renderer-stylus@<span class="number">0.2</span><span class="number">.3</span> <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-feed@<span class="number">1.0</span><span class="number">.2</span> <span class="comment">--save</span></span><br><span class="line">$ npm <span class="keyword">install</span> hexo-generator-sitemap@<span class="number">1.0</span><span class="number">.1</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure><h3 id="6-命令总结"><a href="#6-命令总结" class="headerlink" title="6.命令总结"></a>6.命令总结</h3><hr><p>常用命令</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> #新建文章</span><br><span class="line">hexo new page <span class="string">"pageName"</span> #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口<span class="number">4000</span>，<span class="string">'ctrl + c'</span>关闭server）</span><br><span class="line">hexo deploy #将.deploy目录部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line">复合命令</span><br></pre></td></tr></table></figure><p>hexo deploy -g  #生成加部署<br>hexo server -g  #生成加预览</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">命令的简写为：</span><br></pre></td></tr></table></figure><p>hexo n == hexo new<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy</p><p><code>`</code></p><p>还有很多内容，未完待续～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无意中发现了Hexo这个基于Node.js的博客框架，之前已经考虑了很久要建个人博客，于是就动起了折腾的想法。事实证明在墙内使用确实还是有一点点折腾的，不过尝试过后感觉Hexo确实很不错，很赞。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
